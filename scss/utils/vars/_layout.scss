////
/// Layout vars
/// @group Layout
/// @access public
////

/// modal default width
/// @type Value(px)
$modal-width: 440px;

/// bounds default width
/// @type Value(px)
$bounds: 840px;

/// bounds wide variant width
/// @type Value(px)
$bounds-wide: 1100px;

/// small border-radius value
/// @type Value(px)
$smallRadius: 2px;

/// default border-radius value
/// @type Value(px)
$defaultRadius: 4px;

/// large border-radius value
/// @type Value(px)
$largeRadius: 8px;

/// zindex aliases
/// @prop {Number} zindex-map.main [0]
/// @prop {Number} zindex-map.floating-content [10]
/// @prop {Number} zindex-map.shade [20]
/// @prop {Number} zindex-map.shade-content [25]
/// @prop {Number} zindex-map.modal [30]
/// @prop {Number} zindex-map.popup [50]
$zindex-map: (
	main: 0,
	floating-content: 10,
	shade: 20,
	shade-content: 25,
	modal: 30,
	popup: 50
);

/// Convenience list of possible `display` values.
/// see `str-firstCharToUpper` for managing camelCasing
/// @type List
/// @see {Function} str-firstCharToUpper
$display-values: (
	none,
	block,
	flex,
	inline,
	inline-block,
	inline-flex
);

/// camelCase to CSS values.
/// omits `flex-start` because it is a default prop of Flex items
/// @prop {Value} flexJustifyMap.flexEnd [flex-end]
/// @prop {Value} flexJustifyMap.center [center]
/// @prop {Value} flexJustifyMap.spaceBetween [space-between]
/// @prop {Value} flexJustifyMap.spaceAround [space-around]
$flexJustifyMap: (
	"flexEnd": flex-end,
	"center": center,
	"spaceBetween": space-between,
	"spaceAround": space-around
);

/// map of `justify-content` values
/// human-readable keys to `justify-content` values
/// @prop {Value} flexAlignMap.top [flex-start]
/// @prop {Value} flexAlignMap.bottom [flex-end]
/// @prop {Value} flexAlignMap.center [center]
$flexAlignMap: (
	"top": flex-start,
	"bottom": flex-end,
	"center": center
);
